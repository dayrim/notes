version: "3.8"
name: "${APP_NAME}"

configs:
  postgres_config:
    file: "./postgres/postgres.conf"

services:
  postgres:
    container_name: "${APP_NAME}-db"
    image: "${POSTGRESQL_IMAGE:-postgres:14-alpine}"
    environment:
      POSTGRES_DB: ${APP_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      - -c
      - config_file=/etc/postgresql.conf
    configs:
      - source: postgres_config
        target: /etc/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ~/db/data/${APP_NAME}-postgres:/var/lib/postgresql/data

  electric:
    image: "${ELECTRIC_IMAGE:-electricsql/electric:latest}"
    container_name: "${APP_NAME}-sync-service"
    init: true
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${APP_NAME}
      DATABASE_REQUIRE_SSL: false
      PG_PROXY_PASSWORD: ${PROXY_PASSWORD}
      LOGICAL_PUBLISHER_HOST: electric
      AUTH_MODE: insecure
    ports:
      - ${ELECTRIC_PORT}:5133
      - ${ELECTRIC_PROXY_PORT}:65432
    depends_on:
      - postgres
  backend:
    container_name: "${APP_NAME}-backend"
    build:
      context: ../../auth-backend
      dockerfile: Dockerfile
    environment:
      VITE_BACKEND_PORT: ${VITE_BACKEND_PORT}
      AUTH_SECRET: ${AUTH_SECRET}
      POSTGRESQL_CONNECTION: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${APP_NAME}
    ports:
      - "${VITE_BACKEND_PORT}:${VITE_BACKEND_PORT}"
    depends_on:
      - postgres
